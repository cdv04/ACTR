scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class)) +
#geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
#geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
myhdrX$type <- factor(myhdrX$type,levels=c("act","obs"))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#     geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)
myhdrX$type <- factor(myhdrX$type,levels=c("obs","act"))
hdrX_plot <- ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)
myhdrX$type <- factor(myhdrX$type,levels=c("obs","act"))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
# geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, group=type)) +
# geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class)) +
# geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class)) +
# geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
geom_errorbarh(subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class)) +
# geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
geom_errorbarh(aes(xmin=binf[type=="act"], xmax=bsup[type=="act"]), size=2)
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class)) +
# geom_errorbarh(aes(xmin=binf, xmax=bsup, colour=type), size=2)+
geom_errorbarh(aes(xmin=binf[type=="act"], xmax=bsup[type=="act"]), size=2)
library(ggplot2)
hdrX_plot <- ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
return(hdrX_plot )
}
library(ggplot2)
hdrX_plot <- ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
return(hdrX_plot )
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
myhdrX$type <- factor(myhdrX$type,levels=c("act","obs"))
gplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
library(ACTR)
ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="act"),aes(xmin=binf, xmax=bsup), size=2)+
#geom_errorbarh(data=subset(myhdrX, type=="obs"),aes(xmin=binf, xmax=bsup), size=2)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
plot_hdr5 <- view_hdr(hdr5_LNO, hdr5_LNA) # IC avec les moy et sd pondérés
plot_hdr5
plot_hdr50 <-view_hdr(hdr50_LNO, hdr50_LNA) # IC avec les moy et sd pondérés
plot_hdr50
myhdr5
hdr5_LNO
hdr5_LNA
library(ACTR)
plot_hdr5 <- view_hdr(hdr5_LNO, hdr5_LNA) # IC avec les moy et sd pondérés
plot_hdr5
library(ACTR)
view_hdr(hdr5_LNO, hdr5_LNA)
view_hdr<- function(myHdrX_obs, myHdrX_act) {
## data process for graph
myHdrX_act$type <- c("act")
myHdrX_obs$type <- c("obs")
myhdrX <- rbind(myHdrX_obs, myHdrX_act)
names(myhdrX)[3:4] <- c("binf", "bsup")
myhdrX$type <- as.factor(myhdrX$type)
myhdrX$type <- factor(myhdrX$type,levels=c("act","obs"))
library(ggplot2)
hdrX_plot <- ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=1)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
return(hdrX_plot )
}
plot_hdr5 <- view_hdr(hdr5_LNO, hdr5_LNA) # IC avec les moy et sd pondérés
plot_hdr5
view_hdr<- function(myHdrX_obs, myHdrX_act) {
## data process for graph
myHdrX_act$type <- c("act")
myHdrX_obs$type <- c("obs")
myhdrX <- rbind(myHdrX_obs, myHdrX_act)
names(myhdrX)[3:4] <- c("binf", "bsup")
myhdrX$type <- as.factor(myhdrX$type)
myhdrX$type <- factor(myhdrX$type,levels=c("act","obs"))
library(ggplot2)
hdrX_plot <- ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=1.5)+
geom_point(size=5, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
return(hdrX_plot )
}
plot_hdr5 <- view_hdr(hdr5_LNO, hdr5_LNA) # IC avec les moy et sd pondérés
plot_hdr5
view_hdr<- function(myHdrX_obs, myHdrX_act) {
## data process for graph
myHdrX_act$type <- c("act")
myHdrX_obs$type <- c("obs")
myhdrX <- rbind(myHdrX_obs, myHdrX_act)
names(myhdrX)[3:4] <- c("binf", "bsup")
myhdrX$type <- as.factor(myhdrX$type)
myhdrX$type <- factor(myhdrX$type,levels=c("act","obs"))
library(ggplot2)
hdrX_plot <- ggplot(myhdrX,aes(x=myhdrX[,2], y=Class, fill=type, colour=type)) +
geom_errorbarh(aes(xmin=binf, xmax=bsup), size=1.5)+
geom_point(size=6, aes(colour=type, shape=type))+
scale_x_log10(limits=c(min(myhdrX[,3])/10 ,max(myhdrX[,4]*10)), breaks=c(1e-04, 1e-03, 1e-02, 1e-01, 1e0, 1e+01, 1e+02, 1e+03, 1e+04, 1e+05) ) +
theme(axis.text.x=element_text(angle=30, hjust=1, vjust=1))+
xlab(names(myhdrX)[2])+
theme_bw()+
scale_colour_manual(values=c("grey60", "grey20"))+
scale_fill_manual(values=c("grey60", "grey20"))+
theme(axis.title.x=element_text(face="bold", size=rel(2)))+
theme(axis.title.y=element_text(face="bold", size=rel(2)))+
theme(strip.text = element_text(face="bold", size=rel(1.5)))+
theme(axis.text.y = element_text(size=rel(2)))
return(hdrX_plot )
}
plot_hdr5 <- view_hdr(hdr5_LNO, hdr5_LNA) # IC avec les moy et sd pondérés
plot_hdr5
myhdr5
hdr5_LNO
install.packages("devtools")
git config --global --list
file.exists("~/.ssh/id_rsa.pub")
est_PAC_nw<- function (dat, var_grp) {
library(dplyr)
grp <- substitute(var_grp)
ind_grp <- which(colnames(dat)==grp)
## pre-processing
#select Acute data
dat_acute.df <- filter(dat, DoseType == "Acute")
# order dat.Acute by var_grp (alphabetic order) and SpeciesComp (alphabetic order)
dat_acute.df <- arrange(dat_acute.df, dat_acute.df[,ind_grp],SpeciesComp )
# transforme dataframe into list for further developement
dat_acute.list  <-  split(dat_acute.df,  droplevels(dat_acute.df[,ind_grp]))
# same for chronic
dat_chronic.df <- filter(dat, DoseType == "Chronic")
dat_chronic.df <- arrange(dat_chronic.df, dat_chronic.df[,ind_grp],SpeciesComp)
dat_chronic.list  <-  split(dat_chronic.df,  droplevels(dat_chronic.df[,ind_grp]))
# Calculating MuA and MuC
MuA <- sapply(dat_acute.list, function(x){
round(mean(log10(x$ED)),2)
})
MuC <- sapply(dat_chronic.list, function(x){
round(mean(log10(x$ED)),2)
})
# Calculating wsigma_A and wsigma_C
SigmaA<- sapply(dat_acute.list, function(x){
round(sd(log10(x$ED)),2)
})
wSigma <- sapply(dat_chronic.list, function(x){
round(sd(log10(x$ED)),2)
})
# taking the levels of the var_grp
grp_level <- (levels(dat_acute.df[,ind_grp]))
# summary dataframe
PAC<-data.frame(grp = grp_level,
MuA_lg = MuA,
SigmaA_lg = SigmaA,
MuC_lg = MuC,
SigmaC_lg = SigmaC)
names(PAC)[1] <- names(dat)[ind_grp]
rownames(PAC) <- NULL
return(PAC)
}
a<-est_PAC_nw (actr17KP,Class)
a
est_PAC_nw<- function (dat, var_grp) {
library(dplyr)
grp <- substitute(var_grp)
ind_grp <- which(colnames(dat)==grp)
## pre-processing
#select Acute data
dat_acute.df <- filter(dat, DoseType == "Acute")
# order dat.Acute by var_grp (alphabetic order) and SpeciesComp (alphabetic order)
dat_acute.df <- arrange(dat_acute.df, dat_acute.df[,ind_grp],SpeciesComp )
# transforme dataframe into list for further developement
dat_acute.list  <-  split(dat_acute.df,  droplevels(dat_acute.df[,ind_grp]))
# same for chronic
dat_chronic.df <- filter(dat, DoseType == "Chronic")
dat_chronic.df <- arrange(dat_chronic.df, dat_chronic.df[,ind_grp],SpeciesComp)
dat_chronic.list  <-  split(dat_chronic.df,  droplevels(dat_chronic.df[,ind_grp]))
# Calculating MuA and MuC
MuA <- sapply(dat_acute.list, function(x){
round(mean(log10(x$ED)),2)
})
MuC <- sapply(dat_chronic.list, function(x){
round(mean(log10(x$ED)),2)
})
# Calculating wsigma_A and wsigma_C
SigmaA<- sapply(dat_acute.list, function(x){
round(sd(log10(x$ED)),2)
})
SigmaC <- sapply(dat_chronic.list, function(x){
round(sd(log10(x$ED)),2)
})
# taking the levels of the var_grp
grp_level <- (levels(dat_acute.df[,ind_grp]))
# summary dataframe
PAC<-data.frame(grp = grp_level,
MuA_lg = MuA,
SigmaA_lg = SigmaA,
MuC_lg = MuC,
SigmaC_lg = SigmaC)
names(PAC)[1] <- names(dat)[ind_grp]
rownames(PAC) <- NULL
return(PAC)
}
a<-est_PAC_nw (actr17KP,Class)
a
library(ACTR)
library(ACTR)
set.seed(randNum )
hdr5_LNO <- IC_HdrLN_sswd(edr10_obs, 0.05,B) # test IC sans pondération Mu et Sigma comme ds SSWD
hdr5_LNO
set.seed(randNum )
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
library(ACTR)
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
myPAC <- est_PAC_nw (actr17KP,Class)
myPAC
library(ACTR)
myPAC <- est_PAC_nw (actr17KP,Class)
myPAC
dat <- actr17KP
grp <- substitute(var_grp)
ind_grp <- which(colnames(dat)==grp)
## pre-processing
#select Acute data
dat_acute.df <- filter(dat, DoseType == "Acute")
# order dat.Acute by var_grp (alphabetic order) and SpeciesComp (alphabetic order)
dat_acute.df <- arrange(dat_acute.df, dat_acute.df[,ind_grp],SpeciesComp )
# transforme dataframe into list for further developement
dat_acute.list  <-  split(dat_acute.df,  droplevels(dat_acute.df[,ind_grp]))
# same for chronic
dat_chronic.df <- filter(dat, DoseType == "Chronic")
dat_chronic.df <- arrange(dat_chronic.df, dat_chronic.df[,ind_grp],SpeciesComp)
dat_chronic.list  <-  split(dat_chronic.df,  droplevels(dat_chronic.df[,ind_grp]))
# Calculating MuA and MuC
MuA <- sapply(dat_acute.list, function(x){
round(mean(log10(x$ED)),2)
})
dat_acute.list  <-  split(dat_acute.df,  droplevels(dat_acute.df[,ind_grp]))
var_group="Class"
grp <- substitute(var_grp)
ind_grp <- which(colnames(dat)==grp)
ind_gro
ind_grp
dat_acute.df <- filter(dat, DoseType == "Acute")
dat_acute.df
names(  dat_acute.df)
ind_grp=4
dat_acute.df <- filter(dat, DoseType == "Acute")
# order dat.Acute by var_grp (alphabetic order) and SpeciesComp (alphabetic order)
dat_acute.df <- arrange(dat_acute.df, dat_acute.df[,ind_grp],SpeciesComp )
# transforme dataframe into list for further developement
dat_acute.list  <-  split(dat_acute.df,  droplevels(dat_acute.df[,ind_grp]))
# same for chronic
dat_chronic.df <- filter(dat, DoseType == "Chronic")
dat_chronic.df <- arrange(dat_chronic.df, dat_chronic.df[,ind_grp],SpeciesComp)
dat_chronic.list  <-  split(dat_chronic.df,  droplevels(dat_chronic.df[,ind_grp]))
dat_chronic.list  [1]
MuA <- sapply(dat_acute.list, function(x){
round(mean(log10(x$ED)),2)
})
MuC <- sapply(dat_chronic.list, function(x){
round(mean(log10(x$ED)),2)
})
SigmaA<- sapply(dat_acute.list, function(x){
round(sd(log10(x$ED)),2)
})
SigmaC <- sapply(dat_chronic.list, function(x){
round(sd(log10(x$ED)),2)
})
grp_level <- (levels(dat_acute.df[,ind_grp]))
PAC<-data.frame(grp = grp_level,
wMuA_lg = MuA,
wSigmaA_lg = SigmaA,
wMuC_lg = MuC,
wSigmaC_lg = SigmaC)
names(PAC)[1] <- names(dat)[ind_grp]
rownames(PAC) <- NULL
PAC
library(ACTR)
dat<- actr17KP
PAC_obs <- do.call(est_PAC,list(dat,MyVarGrp))
library(ACTR)
set.seed(randNum )
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
PAC_bt
PAC_bt
rm(list=ls())
load("D:/ProjetsIRSN/ACT/ACTR/ACTR_enviro.RData")
PAC_bt
set.seed(randNum )
hdr5_LNO <- IC_HdrLN_sswd(edr10_obs, 0.05,B) # test IC sans pondération Mu et Sigma comme ds SSWD
hdr5_LNO
set.seed(randNum )
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
dat<- actr17KP
PAC_boot <- PAC_bt
ind_grp=4
set.seed(randNum )
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
library(ACTR)
set.seed(randNum )
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
library(ACTR)
set.seed(randNum )
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
library(ACTR)
hdr5_LNA <- IC_HdrLN_act_sswd(actr17KP, Class, bm_mu, bm_sigma, 0.05,B)
hdr5_LNA
myhdr5<-resume_hdr(hdr5_LNO,hdr5_LNA)
myhdr5
plot_hdr5 <- view_hdr(hdr5_LNO, hdr5_LNA) # IC avec les moy et sd pondérés
plot_hdr5
